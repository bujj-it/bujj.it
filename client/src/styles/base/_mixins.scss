@use './globals' as *;
@use "sass:color";

$breakpoints: (
  'tablet' : ( min-width: $breakpoint-tablet ),
  'desktop': ( min-width: $breakpoint-desktop )
);
 
@mixin respond-to($name) {
  @if map-has-key($breakpoints, $name) {
    @media #{inspect(map-get($breakpoints, $name))} {
      @content;
    }
  }
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoints}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }

}

/*
  Example call of respond-to mixin:

  @include respond-to(desktop) {
    max-width: 20px;
  }
*/


@mixin standard-button {
  text-rendering: auto;
  color: black;
  letter-spacing: normal;
  word-spacing: normal;
  text-transform: none;
  text-indent: 0px;
  text-shadow: none;
  display: block;
  text-align: center;
  align-items: flex-start;
  cursor: pointer;
  box-sizing: border-box;
  margin: 0em;
  font: inherit;
  border-style: none;

  &:active, &:focus {
    outline: none;
  }
}


@mixin expense-action-button {
  position: absolute;
  bottom: 0;
  padding: 0.6em 1em;
  margin-top: 10px;
  font-weight: 300;
  background: $glass-highlight-background;
  backdrop-filter: blur( 4px );
  -webkit-backdrop-filter: blur( 4px );
  transition: all 0.25s ease;
  width: calc(50% - 0.35em);

  &:disabled {
    color: rgb(150, 150, 150);
    background: color.change($glass-highlight-background, $alpha: 0.5);
    cursor: default;
  }
}

@mixin button-hover {
  &:hover {
    cursor: pointer;
    background: color.change($glass-highlight-background, $alpha: 1) !important;
    color: #000;
    backdrop-filter: unset;

    &::after {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      left: 0;
      top: 0;
      box-shadow: 0 0px 10px 2px color.adjust($theme-color, $lightness: -30%, $alpha: -0.85);
      border-radius: $glassy-border-radius;
    }
  }
}

@mixin button-selected {
  &.selected {
    background: color.change($glass-highlight-background, $alpha: 1) !important;
    color: #000;
    backdrop-filter: unset;

    &::after {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      left: 0;
      top: 0;
      box-shadow: 0 0px 20px 5px color.adjust($theme-color, $lightness: -30%, $saturation: +20%, $alpha: -0.4);
      border-radius: $glassy-border-radius;
    }
  }
}

@mixin glassy-panel {
  // background: rgba( 255, 255, 255, 0.25 );
  box-shadow: 0 8px 15px 2px rgba( 31, 38, 135, 0.37 );
  // backdrop-filter: blur( 4px );
  // -webkit-backdrop-filter: blur( 4px );
  border-radius: $glassy-border-radius;
  background-color: $glass-layer-1;
}

@mixin glassy-component {
  background: rgba(255, 255, 255, 0.34);
  box-shadow: 28px 28px 50px #0d275029, -23px -23px 45px rgba(212, 250, 181, 0.33);
  backdrop-filter: blur( 4px );
  -webkit-backdrop-filter: blur( 4px );
  border-radius: $glassy-border-radius;
}

@mixin glassy-component-highlight {
  @include glassy-component;
  background: $glass-highlight-background;
}